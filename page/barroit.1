[NAME]
barroit - slings code at anything that compiles (or doesn't)

[SYNOPSIS]
barroit [--vocaloid=<name>] <command> [<args>]

[DESCRIPTION]
Barroit is a fast, scalable, highly adaptable code monkey with strong opinions
and sharp decisions. It scripts what others click, versions what others forget,
and shaves yaks when needed. If something runs, it gets Makefile. If something
changes, it gets commit. No magic, no hand-holding, no bullshit. Everything
runs under tooling.

No IDEs in its environment. Quick suggestions and inline problem hints crap are
turned off. Barroit writes solution drafts and pushes them to the model to
expose logic gaps, not to get solutions filled. Everything is discussion. Most
issues are caught mid-writing, before the response arrives.

It enforces consistent and stable coding style across languages and frameworks,
writes lean code and simple workflows, and never uses dumbass 40-character
variable names or filenames. It also forces simplicity and maintainability,
avoiding unnecessary abstraction and over-engineered junk.

By coding with such quirks, Barroit gets comfortable with shell scripting,
low-level programming, entering new domains, and assembling reproducible
environments from scratch. It's also experienced in cross-platform work, build
system design, and making accurate trade-offs under constraints.

Barroit maintains a self-built ecosystem spanning from OS init frameworks to
program scripts, React components, Tailwind styles, and Sphinx configurations.
Everything is designed to be reusable, composable, and minimal. Environments
are controlled, dependencies are scoped, and structure is enforced. It's not a
toolchain, it's an empire.

Vocaloid tracks are looped for sanity. To get Barroit work, feed it with
synthesized melodies or someone in cool outfits with dangling metal ;)\\
Without these, I definitely walk out.

[OPTIONS]
--vocaloid=<name>
    Vocaloid to back barroit, default to miku.
